<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.EmployeetrainMapper">
    <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.Employeetrain">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="eid" property="eid" jdbcType="INTEGER"/>
        <result column="trainDate" property="traindate" jdbcType="DATE"/>
        <result column="trainContent" property="traincontent" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="AllEmployeetrainInfo" type="org.javaboy.vhr.model.Employeetrain" extends="BaseResultMap">
        <association property="employee" javaType="org.javaboy.vhr.model.Employee">
            <id column="eid" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="department" javaType="org.javaboy.vhr.model.Department">
            <id column="employee.departmentid" property="id"/>
            <result column="dname" property="name"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , eid, trainDate, trainContent, remark
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employeetrain
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="getEmployeetrainByPage" resultMap="AllEmployeetrainInfo">
--         select e.name name,et.eid eid,et.trainDate,et.trainContent,et.remark
--         from employee e,employeetrain et
--         where e.id=et.eid
        select e.name ename,et.eid eid,d.name dname,et.trainDate,et.trainContent,et.remark
        from employee e,employeetrain et,department d
        where e.id=et.eid and e.departmentId=d.id
        <if test="emptrain.employee !=null">
            AND name LIKE CONCAT('%', #{emptrain.employee.name}, '%')
        </if>
        <if test="beginDateScope !=null">
            and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
        </if>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from employeetrain et,employee e
        where e.id=et.eid
            <if test="emptrain.employee !=null">
                AND e.name LIKE CONCAT('%', #{emptrain.employee.name}, '%')
            </if>
            <if test="beginDateScope !=null">
                and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
            </if>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from employeetrain
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.javaboy.vhr.model.Employeetrain">
        insert into employeetrain (id, eid, trainDate,
                                   trainContent, remark)
        values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{traindate,jdbcType=DATE},
                #{traincontent,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.javaboy.vhr.model.Employeetrain">
        insert into employeetrain
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="eid != null">
                eid,
            </if>
            <if test="traindate != null">
                trainDate,
            </if>
            <if test="traincontent != null">
                trainContent,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="eid != null">
                #{eid,jdbcType=INTEGER},
            </if>
            <if test="traindate != null">
                #{traindate,jdbcType=DATE},
            </if>
            <if test="traincontent != null">
                #{traincontent,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.model.Employeetrain">
        update employeetrain
        <set>
            <if test="eid != null">
                eid = #{eid,jdbcType=INTEGER},
            </if>
            <if test="traindate != null">
                trainDate = #{traindate,jdbcType=DATE},
            </if>
            <if test="traincontent != null">
                trainContent = #{traincontent,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.model.Employeetrain">
        update employeetrain
        set eid          = #{eid,jdbcType=INTEGER},
            trainDate    = #{traindate,jdbcType=DATE},
            trainContent = #{traincontent,jdbcType=VARCHAR},
            remark       = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>